  def evalRPN(self, tokens: List[str]) -> int:
        """
        Slightly optimized version using a set for operator lookup
        and avoiding repeated int conversions.
        """
        st = []
        operators = {'+', '-', '*', '/'}
        
        for token in tokens:
            if token in operators:
                # Pop two operands (note the order!)
                b = st.pop()  # Right operand
                a = st.pop()  # Left operand
                
                # Apply the operation
                if token == '+':
                    result = a + b
                elif token == '-':
                    result = a - b
                elif token == '*':
                    result = a * b
                else:  # token == '/'
                    # Use int() to truncate toward zero
                    result = int(a / b)
                
                st.append(result)
            else:
                # Token is a number: convert to int and push
                st.append(int(token))
        
        return st[0]  # Return the final result
