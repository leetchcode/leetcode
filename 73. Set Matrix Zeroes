class Solution:
    def setZeroes(self, matrix: list[list[int]]) -> None:
        """
        Do not return anything, modify matrix in-place instead.
        """
        rows = len(matrix)
        cols = len(matrix[0])
        first_row_has_zero = False
        first_col_has_zero = False

        # Step 1: Check if the first row or first column has a zero
        for j in range(cols):
            if matrix[0][j] == 0:
                first_row_has_zero = True
                break
        
        for i in range(rows):
            if matrix[i][0] == 0:
                first_col_has_zero = True
                break

        # Step 2: Use the first row and column to mark rows/columns to be zeroed
        for i in range(1, rows):
            for j in range(1, cols):
                if matrix[i][j] == 0:
                    matrix[i][0] = 0
                    matrix[0][j] = 0

        # Step 3: Zero out the rest of the matrix based on markers
        for i in range(1, rows):
            for j in range(1, cols):
                if matrix[i][0] == 0 or matrix[0][j] == 0:
                    matrix[i][j] = 0

        # Step 4: Zero out the first row and/or column if needed
        if first_row_has_zero:
            for j in range(cols):
                matrix[0][j] = 0
        
        if first_col_has_zero:
            for i in range(rows):
                matrix[i][0] = 0
