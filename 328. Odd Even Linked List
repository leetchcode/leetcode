# Definition for singly-linked list.
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def oddEvenList(head: ListNode) -> ListNode:
    # Handle edge cases
    if not head or not head.next:
        return head
    
    # Initialize pointers
    odd_head = odd = head          # First node (index 1)
    even_head = even = head.next   # Second node (index 2)
    
    # Iterate through the list
    while even and even.next:
        # Connect odd nodes
        odd.next = even.next
        odd = odd.next
        
        # Connect even nodes
        even.next = odd.next
        even = even.next
    
    # Connect the end of odd list to the head of even list
    odd.next = even_head
    
    return odd_head
