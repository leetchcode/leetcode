"""
Definition of Interval:
class Interval(object):
    def __init__(self, start, end):
        self.start = start
        self.end = end
"""

class Solution:
    def minMeetingRooms(self, intervals: List[Interval]) -> int:
        if len(intervals)<2:
            return len(intervals)

        intervals.sort(key=lambda x : x.start)
        heap = []
        for interval in intervals:
            if heap and interval.start>=heap[0]: # if start>=earliest end then re-use that room by popping and pushing the current room so we get a new earliest end time
                heapq.heappop(heap)
            heapq.heappush(heap, interval.end)

        return len(heap)        


        
